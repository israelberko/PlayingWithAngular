buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'com.bmuschko:gradle-docker-plugin:3.5.0'
    }
}

apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin

import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

task copyDockerFiles(type: Copy) {
    description = "Copy Dockerfile and required data to build directory"
    from 'src/main/docker'
    from "${project.buildDir}/libs"
    into { "${project.buildDir}/docker" }
    include "*"
    exclude "**/*.yml"
}

def rfbImageName = 'israelber/playingwithangular'

task buildDocker(type: DockerBuildImage, dependsOn: 'copyDockerFiles') {
    description = "Package application as Docker image"
    group = "Docker"
    inputDir = project.file("${project.buildDir}/docker")
    tags = ["${rfbImageName}:latest".toString(), "${rfbImageName}:${project.version}".toString()]
}


task pushDockerLatest(type: DockerPushImage, dependsOn: 'buildDocker') {
    imageName = rfbImageName
    tag = "latest"
}

/**
 * Use to push project version tag to docker hub
 */
task pushDockerVersionTag(type: DockerPushImage, dependsOn: 'buildDocker') {
    imageName = rfbImageName
    tag =  "${project.version}".toString()
}

